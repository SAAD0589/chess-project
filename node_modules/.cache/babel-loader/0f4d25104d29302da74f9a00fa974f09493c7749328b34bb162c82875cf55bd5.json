{"ast":null,"code":"import * as type from './TypeAction';\nimport Match from './Match';\nimport ListPlayer from '../../Components/Joueurs/data/ListPlayers';\nimport { produce } from 'immer';\nconst inisialeState = {\n  Joueur: ListPlayer,\n  Match: Match,\n  MatchTerminer: [],\n  winner: \"\"\n};\nexport default function StoreRessource() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : inisialeState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case type.Add_Match:\n      return {\n        ...state,\n        Match: [...state.Match, action.playnod]\n      };\n    case type.Add_Joueur:\n      alert(1);\n      return {\n        ...state,\n        Joueur: [...state.Joueur, action.playnod]\n      };\n    case 'Del_Match':\n      const X = produce(state, draftSatet => {\n        draftSatet.Match.splice(action.payload, 1);\n      });\n      return X;\n    case 'Add_trmMatch':\n      return {\n        ...state,\n        MatchTerminer: [...state.MatchTerminer, action.payload]\n      };\n    case 'ChangeWinner':\n      return {\n        ...state,\n        winner: action.payload\n      };\n    case \"WinnerWinnerChikenDiner\":\n      state.MatchTerminer.map(e => {\n        return e.id_joueur1.id === state.winner || e.id_joueur2.id === state.winner ? e.id_gagnant = state.winner : console.log(\"sir ntahr\");\n      });\n    default:\n      return state;\n  }\n}\n// case type.REMOVE_FRUIT:\n\n//     const X=produce(state,draftSatet=>{\n\n//         const idn=draftSatet.fruits.indexOf(action.payload)\n\n//         draftSatet.fruits.splice(idn,1)\n\n//     })\n_c = StoreRessource;\nvar _c;\n$RefreshReg$(_c, \"StoreRessource\");","map":{"version":3,"names":["type","Match","ListPlayer","produce","inisialeState","Joueur","MatchTerminer","winner","StoreRessource","state","action","Add_Match","playnod","Add_Joueur","alert","X","draftSatet","splice","payload","map","e","id_joueur1","id","id_joueur2","id_gagnant","console","log"],"sources":["C:/Users/LENOVOÂµ/Downloads/chess-project/chess-project/src/Components/redux/StoreRessource.js"],"sourcesContent":["import * as type from './TypeAction'\r\nimport Match from './Match'\r\nimport ListPlayer from '../../Components/Joueurs/data/ListPlayers'\r\nimport{ produce} from 'immer';\r\nconst inisialeState={\r\n    Joueur:ListPlayer,\r\n    Match:Match,\r\n    MatchTerminer:[],\r\n    winner:\"\"\r\n\r\n}\r\nexport default function StoreRessource(state=inisialeState,action){\r\n    switch(action.type){\r\n        case type.Add_Match:\r\n        return{...state,Match:[...state.Match,action.playnod]}\r\n        case type.Add_Joueur:\r\n            alert(1)\r\n            return{...state,Joueur:[...state.Joueur,action.playnod]}\r\n        case 'Del_Match':\r\n            const X=produce(state,draftSatet=>{\r\n                draftSatet.Match.splice(action.payload,1)\r\n            })\r\n            return X;\r\n\r\n\r\n        case 'Add_trmMatch' :\r\n\r\n                    return{...state,MatchTerminer:[...state.MatchTerminer,action.payload]}\r\n            \r\n        case 'ChangeWinner':\r\n            return{...state,winner:action.payload}\r\n            \r\n        case \"WinnerWinnerChikenDiner\":\r\n            state.MatchTerminer.map((e)=>{return e.id_joueur1.id===state.winner || e.id_joueur2.id===state.winner ? e.id_gagnant=state.winner :console.log(\"sir ntahr\")})\r\n        default:\r\n            return state\r\n    }\r\n}\r\n// case type.REMOVE_FRUIT:\r\n\r\n//     const X=produce(state,draftSatet=>{\r\n\r\n//         const idn=draftSatet.fruits.indexOf(action.payload)\r\n\r\n//         draftSatet.fruits.splice(idn,1)\r\n\r\n//     })"],"mappings":"AAAA,OAAO,KAAKA,IAAI,MAAM,cAAc;AACpC,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,UAAU,MAAM,2CAA2C;AAClE,SAAQC,OAAO,QAAO,OAAO;AAC7B,MAAMC,aAAa,GAAC;EAChBC,MAAM,EAACH,UAAU;EACjBD,KAAK,EAACA,KAAK;EACXK,aAAa,EAAC,EAAE;EAChBC,MAAM,EAAC;AAEX,CAAC;AACD,eAAe,SAASC,cAAc,GAA4B;EAAA,IAA3BC,KAAK,uEAACL,aAAa;EAAA,IAACM,MAAM;EAC7D,QAAOA,MAAM,CAACV,IAAI;IACd,KAAKA,IAAI,CAACW,SAAS;MACnB,OAAM;QAAC,GAAGF,KAAK;QAACR,KAAK,EAAC,CAAC,GAAGQ,KAAK,CAACR,KAAK,EAACS,MAAM,CAACE,OAAO;MAAC,CAAC;IACtD,KAAKZ,IAAI,CAACa,UAAU;MAChBC,KAAK,CAAC,CAAC,CAAC;MACR,OAAM;QAAC,GAAGL,KAAK;QAACJ,MAAM,EAAC,CAAC,GAAGI,KAAK,CAACJ,MAAM,EAACK,MAAM,CAACE,OAAO;MAAC,CAAC;IAC5D,KAAK,WAAW;MACZ,MAAMG,CAAC,GAACZ,OAAO,CAACM,KAAK,EAACO,UAAU,IAAE;QAC9BA,UAAU,CAACf,KAAK,CAACgB,MAAM,CAACP,MAAM,CAACQ,OAAO,EAAC,CAAC,CAAC;MAC7C,CAAC,CAAC;MACF,OAAOH,CAAC;IAGZ,KAAK,cAAc;MAEP,OAAM;QAAC,GAAGN,KAAK;QAACH,aAAa,EAAC,CAAC,GAAGG,KAAK,CAACH,aAAa,EAACI,MAAM,CAACQ,OAAO;MAAC,CAAC;IAElF,KAAK,cAAc;MACf,OAAM;QAAC,GAAGT,KAAK;QAACF,MAAM,EAACG,MAAM,CAACQ;MAAO,CAAC;IAE1C,KAAK,yBAAyB;MAC1BT,KAAK,CAACH,aAAa,CAACa,GAAG,CAAEC,CAAC,IAAG;QAAC,OAAOA,CAAC,CAACC,UAAU,CAACC,EAAE,KAAGb,KAAK,CAACF,MAAM,IAAIa,CAAC,CAACG,UAAU,CAACD,EAAE,KAAGb,KAAK,CAACF,MAAM,GAAGa,CAAC,CAACI,UAAU,GAACf,KAAK,CAACF,MAAM,GAAEkB,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;MAAA,CAAC,CAAC;IACjK;MACI,OAAOjB,KAAK;EAAA;AAExB;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AAAA,KAnCwBD,cAAc;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}